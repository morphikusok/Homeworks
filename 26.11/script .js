/* Найти алгоритм сортировки пузырьком“ bubble sort”, внимательно его изучить, скопировать код,
 своими словами прописать общий алгоритм(как вы его понимаете) и дать комментарий каждому действию.

Выполнить серию задач:
1) Написать функцию fill, которая принимает в качестве параметров длину массива и любое значение.
  Функция должна вернуть новый массив с указанной длиной и все элементы должны быть указанным значением.

2) Написать функцию reverse, которая принимает в качестве параметров массив и возвращает новый, точно такой же, 
  только с элементами в обратном порядке.

3) Написать функцию compact, которая принимает в качестве параметров массив, и возвращает новый, 
в котором нет значений false, undefined, пустых строк, нулей и null.

4) Написать функцию isEqual, которая принимает в качестве параметров два массива и проверяет их идентичность.
Напоминаю, что массивы - это ссылочные типы данных и простая проверка на равенство двух переменных не сработает.

5) Написать функцию intersection, которая принимает в качестве параметров два массива, и возвращает новый,
 который состоит из общих элементов переданных массивов, то есть тех, которые есть и в первом, и во втором.
 */

const sorted = bubbleSort(
  Array(100).fill(null).map(() => Math.floor(Math.random() * 2000) - 1000)
)

console.log(sorted)

function bubbleSort(array) {
  for (let n = 0; n < array.length; n++) {
    for (let i = 0; i < array.length - 1 - n; i++) {
      if (array[i] > array[i + 1]) {
        const buff = array[i]
        array[i] = array[i + 1]
        array[i + 1] = buff
      }
    }
  }

  return array
}